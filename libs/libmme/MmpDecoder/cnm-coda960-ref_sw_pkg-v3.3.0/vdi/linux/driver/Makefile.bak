# Comment/uncomment the	following line to disable/enable debugging
#DEBUG = y

# Add your debugging flag (or not) to CFLAGS
ifeq ($(DEBUG),y)
  DEBFLAGS = -O	-g # "-O" is needed to expand inlines
else
  DEBFLAGS = -O2
endif
COMPILE_PREFIX=arm-none-linux-gnueabi-
export CC="$(COMPILE_PREFIX)gcc"
export AR="$(COMPILE_PREFIX)ar"
export CXX="${COMPILE_PREFIX}g++"
export AS="${COMPILE_PREFIX}as"
export LD="${COMPILE_PREFIX}ld"
export RANLIB="${COMPILE_PREFIX}ranlib"
export READELF="${COMPILE_PREFIX}readelf"
export STRIP="${COMPILE_PREFIX}strip"


EXTRA_CFLAGS +=	$(DEBFLAGS) -I$(LDDINCDIR) 
//EXTRA_CFLAGS +=	$(DEBFLAGS) -I$(LDDINCDIR)  -DCNM_FPGA_PLATFORM -DCNM_FPGA_USB_INTERFACE -DCONFIG_PM

ifneq ($(KERNELRELEASE),)
# call from kernel build system

obj-m	:= vpu.o

else

//KERNELDIR := ./kernel
KERNELDIR := ../../../../../../../linux
//KERNELDIR :=  /usr/src/linux-headers-3.8.0-27-generic/
//KERNELDIR ?= /lib/modules/$(shell uname -r)/build

PWD	  := $(shell pwd)

default:
	$(MAKE)	-C $(KERNELDIR)	M=$(PWD) LDDINCDIR=$(PWD)/../include modules

endif



clean:
	rm -rf *.o *~ core .depend .*.cmd *.ko *.mod.c .tmp_versions

depend .depend dep:
	$(CC) $(CFLAGS)	-M *.c > .depend


ifeq (.depend,$(wildcard .depend))
include	.depend
endif
