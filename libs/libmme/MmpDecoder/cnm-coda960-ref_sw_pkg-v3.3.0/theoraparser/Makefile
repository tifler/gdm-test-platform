# ----------------------------------------------------------------------
#
# This makefile has been automatically generated by WinGDB 2.2, build 1191
# Do not edit.
#
# Project: theoraparser
#
# ----------------------------------------------------------------------

PLATFORM=cygwin
BUILD_CONFIGURATION=Debug_Embedded_Linux

ifneq ("$(windir)","")
PLATFORM=windows
endif

ifneq ("$(WinDir)","")
PLATFORM=windows
endif

ifneq ("$(WINDIR)","")
PLATFORM=windows
endif

UNAME=$(shell uname -o)

ifeq ("$(UNAME)","Cygwin")
PLATFORM=cygwin
endif

ifeq ("$(BUILD_CONFIGURATION)","")
	BUILD_CONFIGURATION=Debug_Embedded_Linux
endif

ifeq ("$(BUILD_CONFIGURATION)","Debug_Embedded_Linux")
CC= arm-none-linux-gnueabi-gcc
CXX= arm-none-linux-gnueabi-g++
AR= arm-none-linux-gnueabi-ar
CFLAGS= -g -O3 -Wall -gdwarf-2 -c  -I./include
CXXFLAGS= -g -O3 -Wall -gdwarf-2 -c  -I./include
ARFLAGS= cru
LDFLAGS= 
RESULT=libtheoraparser.a
INTERMEDIATE_DIR=.
DESTINATION_DIR=.
ifeq ("$(PLATFORM)","cygwin")
	RM=rm -f
	MKDIR=mkdir -p
	INTERMEDIATE_DIR_MK=.
	DESTINATION_DIR_MK=.
else ifeq ("$(PLATFORM)","unix")
	RM=rm -f
	MKDIR=mkdir -p
	INTERMEDIATE_DIR_MK=.
	DESTINATION_DIR_MK=.
else
	RM= cs-rm.exe -f
	MKDIR= cmd.exe /c md
	INTERMEDIATE_DIR_MK=.
	DESTINATION_DIR_MK=.
endif

endif

ifeq ("$(BUILD_CONFIGURATION)","Release_Embedded_Linux")
CC= arm-none-linux-gnueabi-gcc
CXX= arm-none-linux-gnueabi-g++
AR= arm-none-linux-gnueabi-ar
CFLAGS= -O3 -Wall -c  -I./include
CXXFLAGS= -O3 -Wall -c  -I./include
ARFLAGS= cru
LDFLAGS= 
RESULT=libtheoraparser.a
INTERMEDIATE_DIR=.
DESTINATION_DIR=.
ifeq ("$(PLATFORM)","cygwin")
	RM=rm -f
	MKDIR=mkdir -p
	INTERMEDIATE_DIR_MK=.
	DESTINATION_DIR_MK=.
else ifeq ("$(PLATFORM)","unix")
	RM=rm -f
	MKDIR=mkdir -p
	INTERMEDIATE_DIR_MK=.
	DESTINATION_DIR_MK=.
else
	RM= cs-rm.exe -f
	MKDIR= cmd.exe /c md
	INTERMEDIATE_DIR_MK=.
	DESTINATION_DIR_MK=.
endif

endif

ifeq ("$(BUILD_CONFIGURATION)","Debug_Mingw")
CC= gcc.exe
CXX= g++.exe
AR= ar
CFLAGS= -g -O3 -Wall -gdwarf-2 -c  -I./include
CXXFLAGS= -g -O3 -Wall -gdwarf-2 -c  -I./include
ARFLAGS= cru
LDFLAGS= 
RESULT=libtheoraparser.a
INTERMEDIATE_DIR=.
DESTINATION_DIR=.
ifeq ("$(PLATFORM)","cygwin")
	RM=rm -f
	MKDIR=mkdir -p
	INTERMEDIATE_DIR_MK=.
	DESTINATION_DIR_MK=.
else
	RM= rm -f
	MKDIR= mkdir -p
	INTERMEDIATE_DIR_MK=.
	DESTINATION_DIR_MK=.
endif

endif

ifeq ("$(BUILD_CONFIGURATION)","Debug_NativeLinux")
CC= gcc
CXX= g++
AR= ar
CFLAGS= -g -O3 -Wall -gdwarf-2 -c  -I./include
CXXFLAGS= -g -O3 -Wall -gdwarf-2 -c  -I./include
ARFLAGS= cru
LDFLAGS= 
RESULT=libtheoraparser.a
INTERMEDIATE_DIR=.
DESTINATION_DIR=.
ifeq ("$(PLATFORM)","cygwin")
	RM=rm -f
	MKDIR=mkdir -p
	INTERMEDIATE_DIR_MK=.
	DESTINATION_DIR_MK=.
else
	RM= rm -f
	MKDIR= mkdir -p
	INTERMEDIATE_DIR_MK=.
	DESTINATION_DIR_MK=.
endif

endif

ifeq ("$(BUILD_CONFIGURATION)","Debug_NonOS")
CC= arm-none-eabi-gcc.exe
CXX= arm-none-eabi-g++.exe
AR= arm-none-eabi-ar.exe
CFLAGS= -g -O3 -Wall -gdwarf-2 -c  -I./include
CXXFLAGS= -g -O3 -Wall -gdwarf-2 -c  -I./include
ARFLAGS= cru
LDFLAGS= 
RESULT=libtheoraparser.a
INTERMEDIATE_DIR=.
DESTINATION_DIR=.
ifeq ("$(PLATFORM)","cygwin")
	RM=rm -f
	MKDIR=mkdir -p
	INTERMEDIATE_DIR_MK=.
	DESTINATION_DIR_MK=.
else
	RM= cs-rm.exe -f
	MKDIR= cmd.exe /c md
	INTERMEDIATE_DIR_MK=.
	DESTINATION_DIR_MK=.
endif

endif

SOURCES= bitpack.c decode.c info.c internal.c state.c theora_parser.c

SOURCEPATHS= src/bitpack.c src/decode.c src/info.c src/internal.c src/state.c src/theora_parser.c

HEADERS= bitpack.h codec.h decint.h dequant.h huffdec.h huffman.h internal.h ocintrin.h state.h theora_parser.h theoradec.h

VPATH= $(INTERMEDIATE_DIR):src

OBJECTNAMES=$(patsubst %.c,%.o,$(patsubst %.cpp,%.o,$(SOURCES)))
OBJECTPATHS=$(addprefix $(INTERMEDIATE_DIR)/,$(OBJECTNAMES))

$(DESTINATION_DIR)/$(RESULT): $(OBJECTNAMES)
ifeq ("$(wildcard $(DESTINATION_DIR) )","")
	-$(MKDIR) $(DESTINATION_DIR_MK)
endif
	$(AR) $(ARFLAGS) $@ $(OBJECTPATHS)

$(INTERMEDIATE_DIR)/theoraparser.d: $(SOURCES) $(HEADERS)
ifeq ("$(wildcard $(DESTINATION_DIR) )","")
	-$(MKDIR) $(DESTINATION_DIR_MK)
endif
ifeq ("$(wildcard $(INTERMEDIATE_DIR) )","")
	-$(MKDIR) $(INTERMEDIATE_DIR_MK)
endif
	$(CXX) $(CXXFLAGS) -MM $(SOURCEPATHS) > $@

-include $(INTERMEDIATE_DIR)/theoraparser.d

clean:
	$(RM) $(DESTINATION_DIR)/$(RESULT)
	$(RM) $(INTERMEDIATE_DIR)/theoraparser.d
	$(RM) $(OBJECTPATHS)

%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c -o $(INTERMEDIATE_DIR)/$@ $<

%.o: %.c
	$(CC) $(CFLAGS) -c -o $(INTERMEDIATE_DIR)/$@ $<
